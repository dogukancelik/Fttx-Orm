@model Fttx_Orm.Models.Process.IsPlanTarih

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>İş Plan Tarihi Oluştur</h2>

@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()*@

@*<div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group" style="height:40px">
                @Html.LabelFor(model => model.IsId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IsId, new { htmlAttributes = new { @class = "form-control" } })
                    <link rel="stylesheet" href="~/Content/dropdown.css" />
                    <script src="~/Scripts/dropdown.js" type="text/javascript"></script>
                    <div tabindex="0" class="Jdropdown" style="z-index:4">
                        <div class="dropdown-a"></div>
                        <span>-- Seçiniz ! --</span>
                        <input id="IsId" name="IsId" type="hidden" value="" />
                        <input type="text" placeholder="Ara" /><i class="fa fa-search"></i>
                        <div class="options">

                            <ul>
                                <li>-- Seçiniz ! --</li>
                                @foreach (var item in ViewBag.IsId)
                                {
                                    <li id="@item.Value" onclick="gonder(@item.Value)">@item.Text</li>
                                }

                            </ul>
                            <script>
                                function gonder(id) {
                                    document.getElementById('IsId').value = id;
                                }
                            </script>
                        </div>
                    </div>
                    @Html.ValidationMessageFor(model => model.IsId, "", new { @class = "text-danger", @style = "position:relative;top:31px;" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BaslangicTarih, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BaslangicTarih, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                    @Html.ValidationMessageFor(model => model.BaslangicTarih, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BitisTarih, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BitisTarih, new { htmlAttributes = new { @class = "form-control", @type= "date" } })
                    @Html.ValidationMessageFor(model => model.BitisTarih, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="height:40px">
                @Html.LabelFor(model => model.SurecId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SurecId, new { htmlAttributes = new { @class = "form-control" } })
                    <div tabindex="0" class="Jdropdown" style="z-index:3">
                        <div class="dropdown-a"></div>
                        <span>-- Seçiniz ! --</span>
                        <input id="SurecId" name="SurecId" type="hidden" value="" />
                        <input type="text" placeholder="Ara" /><i class="fa fa-search"></i>
                        <div class="options">

                            <ul>
                                <li>-- Seçiniz ! --</li>
                                @foreach (var item in ViewBag.SurecId)
                                {
                                    <li id="@item.Value" onclick="gonder2(@item.Value)">@item.Text</li>
                                }

                            </ul>
                            <script>
                                function gonder2(id) {
                                    document.getElementById('SurecId').value = id;
                                }
                            </script>
                        </div>
                    </div>
                    @Html.ValidationMessageFor(model => model.SurecId, "", new { @class = "text-danger", @style = "position:relative;top:31px;" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Oluştur" class="btn btn-default" />
                </div>
            </div>
        </div>
    }*@

@*<div>
        @Html.ActionLink("<< Geri dön", "Index")
    </div>*@

@*<script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@


<style>
#external-events {  
    z-index: 2;
    top: 0px;
    left: 0px;
    width: 200px;
    min-height:650px;
    padding: 0 10px;
    border: 1px solid #ccc;
    background: #eee;
    margin-top:15px;
    margin-left: 20px;
    margin-right: 10px;
  }

  
  #external-events .fc-event {
    margin: 1em 0;
    cursor: move;
  }

    #calendar-container {    
        width: 100%;
        min-height: 480px;
        background-color: #ffffff;
    }

    .fc-title {
        font-size: 8px;
    }

    #calendar {
        width: 100%;
        height: 80%;
    }

    button {
        width: auto;
    }
</style>

<link href="~/Content/fullcalendar.min.css" rel="stylesheet" />
<script src="~/Scripts/moment.min.js"></script>
<script src="~/Scripts/fullcalendar.min.js"></script>
@{
    string so = "";
    foreach (var st in (new Fttx_Orm.DAL.FttxContext()).IsPlanTarihs.ToList())
    {

        so = so + "{\"id\":" + st.IsId + st.SurecId + ",\"title\":\"" + ((new Fttx_Orm.DAL.FttxContext()).Iss.Single(u => u.Id == Convert.ToInt64(st.IsId)).Name) + " / " + ((new Fttx_Orm.DAL.FttxContext()).Surecs.Single(p => p.SurecId == Convert.ToInt64(st.SurecId)).SurecAdi) + "\",\"start\":\"" + st.BaslangicTarih + "\", \"end\":\"" + st.BitisTarih + "\"},";
    }

}



<div id='calendar-container'>
    <table>
        <tr>
            <td>
                <div id='external-events'>
                    <div id='external-events-listing'>
                        <h4>Process Event</h4>
                               <div id="" class='fc-event'></div>
                        <p style="display:none">
                            <input type='checkbox' id='drop-remove' checked='checked' />
                            <label for='drop-remove'>remove after drop</label>
                        </p>
                    </div>
                </div>
            </td>
            <td>
                <div id='calendar'></div>
            </td>
            <td width="10"></td>
        </tr>
    </table>
</div>

<script>
    var ss=[];
    var i=0;
    $(document).ready(function () {

        /* initialize the external events
   -----------------------------------------------------------------*/

        $('#external-events .fc-event').each(function () {

            // store data so the calendar knows to render an event upon drop
            $(this).data('event', {
                id: $.trim($(this).attr("id")),
                title: $.trim($(this).text()), // use the element's text as the event title
                stick: true // maintain when user navigates (see docs on the renderEvent method)
            });

            // make the event draggable using jQuery UI
            $(this).draggable({
                zIndex: 999,
                revert: true,      // will cause the event to go back to its
                revertDuration: 0  //  original position after the drag

            });

        });

        /* initialize the calendar
        -----------------------------------------------------------------*/

        $('#calendar').fullCalendar({
            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'month,agendaWeek,agendaDay'
            },
            editable: true,
            droppable: true, // this allows things to be dropped onto the calendar
            dragRevertDuration: 0,
            drop: function (event) {
                // is the "remove after drop" checkbox checked?
                if ($('#drop-remove').is(':checked')) {
                    // if so, remove the element from the "Draggable Events" list
                    ss[i] = $(this).attr("id");
                    i = i + 1;
                    $(this).remove();

                }
            },
            eventClick: function (event) {

            }, eventRender:function(event,element){
                gel();
            },
            eventDragStop: function (event, jsEvent, ui, view) {

                if (isEventOverDiv(jsEvent.clientX, jsEvent.clientY)) {
                    $('#calendar').fullCalendar('removeEvents', event._id);
                    var el = $("<div class='fc-event'>").appendTo('#external-events-listing').text(event.title);
                    el.draggable({
                        zIndex: 999,
                        revert: true,
                        revertDuration: 0
                    });
                    el.data('event', { title: event.title, id: event.id, stick: true });
                }
            },
            events: [@so.Length <= 0 ? "" : so.Substring(0, so.Length - 1)]
        });
    });

    function gel(){
        var eventsFromCalendar = $('#calendar').fullCalendar('clientEvents');
        var data=[[]];


        for(var i=0;i<eventsFromCalendar.length;i++){
            var d =new Date(eventsFromCalendar[i]["start"]["_d"]);

            var c;
            if(eventsFromCalendar[i]["end"]!=null)
            {
                var end=new Date(eventsFromCalendar[i]["end"]["_d"]);
                c=end.getDate()+"."+(end.getMonth()+1)+"."+end.getFullYear();
            }else {c="";}

            var t=d.getDate()+"."+(d.getMonth()+1)+"."+d.getFullYear();

           
            data[i] = [eventsFromCalendar[i]["id"], eventsFromCalendar[i]["title"], t,c,@Convert.ToInt16(HttpContext.Current.User.Identity.Name)];

            $("#planingData").attr("value",data);
            $("#planingData2").attr("value",ss);
        }
    }
</script>